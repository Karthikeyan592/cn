#PS1
library(lpSolve)
f.obj <- c(750, 1000)
f.con <- matrix(c(1, 1,
                  1, 2,
                  4, 3), nrow = 3, byrow = TRUE)
f.dir <- c("<=","<=","<=")
f.rhs <- c(10000,15000,25000)
lp("max", f.obj, f.con, f.dir, f.rhs)
lp("max", f.obj, f.con, f.dir, f.rhs)$solution

#----PS2-----
#1.
library(lpSolve)
f.obj<-c(2,3)
f.con<-matrix(c(2,3,
		    2,6),nrow=2,byrow=TRUE)
f.dir<-c("<=","<=")
f.rhs<-c(8,18)
optimum<-lp("max",f.obj,f.con,f.dir,f.rhs)
var_solution<-lp("max",f.obj,f.con,f.dir,f.rhs)$solution
opt<-optimum$objval
cat("Optimum value is ",opt)
cat("variables final value is ",var_solution[1],var_solution[2])
dcons<-lp("max",f.obj,f.con,f.dir,f.rhs,compute.sens=TRUE)$duals
cat("Dual values are \n",dcons[1],"\n",dcons[2])

# Duals lower and upper limits
lowerLimit<-lp("max", f.obj, f.con, f.dir, f.rhs, compute.sens=TRUE)$duals.from
upperLimit<-lp("max", f.obj, f.con, f.dir, f.rhs, compute.sens=TRUE)$duals.to

cat("Dual values Limits are :\n",lowerLimit[1]," ",lowerLimit[2])
cat(upperLimit[1]," ",upperLimit[2])

d1<-dcons[1]-.30

if(f.rhs[1]+4>=lowerLimit[1]&&f.rhs[1]+4<=upperLimit[1]){
	newopt=opt+(d1*4);
	if(newopt>opt){
		print("Recommended")
	}
	else{
		print("Not Recommended")
	}
}

#as the dual price of m2 is 0 the optimum will not change.


#2.
library(lpSolve)
f.obj<-c(8,5)
f.con<-matrix(c(1,0,0,1,2,1),nrow=3,byrow=TRUE)
f.dir<-c("<=","<=","<=")
f.rhs<-c(150,200,400)
opt=lp("max",f.obj,f.con,f.dir,f.rhs,compute.sens=TRUE)
optVal=opt$objval
cat("Maximum revenue : ",optVal)
cat("Number of hats",opt$solution)
cat("The dual price of the production capacity ",opt$duals[3])
cat("Feasibility range of hat2 : ",opt$duals.from[3],"to",opt$duals.to[3])
cat("dual price of hat1 : ",opt$duals[1])
if(f.rhs[1]-30>=opt$duals.from[1] && f.rhs[1]-30<=opt$duals.to[1])
{
    cat("New optimal revenue : ",optVal-(30*opt$duals[1]))
}

cat("The dual price of type 2 hat : ",opt$duals[2])


#PS3

library(lpSolve)
costs <- matrix(c(464,352,995,513,416,682,654,690,388,867,791,685), nrow = 3)
row.signs <- rep("<=", 3)
row.rhs <- c(75,125,100)
col.signs <- rep(">=", 4)
col.rhs <- c(80,65,70,85)
lptrans <- lp.transport(costs, "min", row.signs, row.rhs, col.signs, col.rhs)
lptrans$solution
lptrans$objval

#assign
library(lpSolve)
a <- matrix(c(17,25,31,10,25,16,12,14,11), nrow = 3, byrow = TRUE)
cost.mat <- a
cost.mat
# Run

lpassign <- lp.assign (cost.mat)
lpassign$solution
lpassign$objval

#hungarian
library(RcppHungarian)
a<-matrix(c(80,55,45,45,58,35,70,50,70,50,80,65,90,70,40,80),nrow=4,byrow=TRUE)
cost<-matrix(0,nrow(a),ncol(a))
maxi<-max(a)
for(i in 1:nrow(a)){
    for(j in 1:ncol(a)){
        cost[i,j]<-max(a)-a[i,j]        
}
}print("Assignment")

soln<-HungarianSolver(cost)$pairs
print(soln)
score<-0
for(i in 1:nrow(soln)){
    score<-score+a[i,soln[i,2]]
}
cat("Maximum ",score)
